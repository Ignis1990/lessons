# Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
#
# Т.е. переводя на нормальный русский язык - необходимо запрашивать у пользователя число, потом ещё число, ещё число, ещё
# число, и по мере того как пользователь будет эти числа сообщать программе - располагать эти числе в убывающем порядке, а
# если пользователь повторно добавляет число, которое уже было - оно должно вставать со стороны ближе к концу списка.
# В целом вероятно мне придётся столкнуться в жизни с таким полупонятным формулированием ТЗ, поэтому интерпретация ХЗ в ТЗ
# видимо тоже часть домашнего задания.
# При этом в задаче ни слова о том, когда нужно остановиться, сколько максимум значений должно быть в списке. Поэтому я
# ограничусь десятью, если у меня вообще что-то получится.

range_list = []
n = 0
while n < 10:
    input_element = int(input(f'Введите любую цифру от 0 до 9 пока не будет получен результат в виде списка: '))
    range_list.append(input_element)
    range_list.sort(reverse=True)
    n += 1
print(range_list)
